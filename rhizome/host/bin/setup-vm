#!/bin/env ruby
# frozen_string_literal: true

require "json"
require_relative "../lib/vm_setup"

unless (action = ARGV.shift)
  puts "expected action as argument"
  exit 1
end

unless (vm_name = ARGV.shift)
  puts "expected path to vm_name as argument"
  exit 1
end

vm_setup = VmSetup.new(vm_name)

if action == "delete"
  vm_setup.purge
  exit 0
end

params = JSON.parse(File.read(VmPath.new(vm_name).prep_json))

begin
  # "Global Unicast" subnet, i.e. a subnet for exchanging packets with
  # the internet.
  gua = params.fetch("public_ipv6")
  ip4 = params.fetch("public_ipv4")
  local_ip4 = params.fetch("local_ipv4")
  unix_user = params.fetch("unix_user")
  ssh_public_key = params.fetch("ssh_public_key")
  nics = params.fetch("nics").map { |args| VmSetup::Nic.new(*args) }.freeze
  max_vcpus = params.fetch("max_vcpus")
  cpu_topology = params.fetch("cpu_topology")
  mem_gib = params.fetch("mem_gib")
  ndp_needed = params.fetch("ndp_needed", false)
  storage_volumes = params.fetch("storage_volumes")
  swap_size_bytes = params["swap_size_bytes"]
  pci_devices = params.fetch("pci_devices", [])
rescue KeyError => e
  puts "Needed #{e.key} in parameters json"
  exit 1
end

case action
when "prep"
  secrets = JSON.parse($stdin.read)
  unless (storage_secrets = secrets["storage"])
    puts "need storage secrets in secrets json"
    exit 1
  end

  vm_setup.prep(unix_user, ssh_public_key, nics, gua, ip4,
    local_ip4, max_vcpus, cpu_topology, mem_gib,
    ndp_needed, storage_volumes, storage_secrets, swap_size_bytes, pci_devices)
when "recreate-unpersisted"
  secrets = JSON.parse($stdin.read)
  unless (storage_secrets = secrets["storage"])
    puts "need storage secrets in secrets json"
    exit 1
  end

  vm_setup.recreate_unpersisted(
    gua, ip4, local_ip4, nics, mem_gib,
    ndp_needed, storage_volumes, storage_secrets,
    multiqueue: max_vcpus > 1
  )
when "reinstall-systemd-units"
  vm_setup.install_systemd_unit(
    max_vcpus, cpu_topology, mem_gib, storage_volumes, nics
  )
else
  puts "Invalid action #{action}"
  exit 1
end
