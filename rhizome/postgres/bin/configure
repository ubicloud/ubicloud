#!/bin/env ruby
# frozen_string_literal: true

require "json"
require_relative "../../common/lib/util"

configure_hash = JSON.parse($stdin.read)

# Update postgresql.conf
configs = configure_hash["configs"].map { |k, v| "#{k} = #{v}" }.join("\n")
safe_write_to_file("/etc/postgresql/16/main/conf.d/001-service.conf", configs)

# Update pg_hba.conf
private_subnets = configure_hash["private_subnets"].flat_map {
  [
    "host    all             all             #{_1["net4"]}                     scram-sha-256",
    "host    all             all             #{_1["net6"]}                     scram-sha-256"
  ]
}.join("\n")

pg_hba_entries = <<-PG_HBA
# PostgreSQL Client Authentication Configuration File
# ===================================================
#
# Refer to the "Client Authentication" section in the PostgreSQL
# documentation for a complete description of this file.

# TYPE  DATABASE        USER            ADDRESS                 METHOD
# Database administrative login by Unix domain socket
local   all             postgres                                peer map=system2postgres

# "local" is for Unix domain socket connections only
local   all             all                                     peer
# IPv4 local connections:
host    all             all             127.0.0.1/32            scram-sha-256
# IPv6 local connections:
host    all             all             ::1/128                 scram-sha-256

# Allow replication connections from localhost, by a user with the
# replication privilege.
local   replication     all                                     peer
host    replication     all             127.0.0.1/32            scram-sha-256
host    replication     all             ::1/128                 scram-sha-256

# Allow connections from private subnet with SCRAM authentication
#{private_subnets}

# Allow connections from public internet with SCRAM authentication
host    all             all             all                     scram-sha-256
PG_HBA
safe_write_to_file("/etc/postgresql/16/main/pg_hba.conf", pg_hba_entries)

pg_ident_entries = <<-PG_IDENT
# PostgreSQL User Name Maps
# =========================
#
# Refer to the PostgreSQL documentation, chapter "Client
# Authentication" for a complete description.
# MAPNAME          SYSTEM-USERNAME         PG-USERNAME
system2postgres    postgres                postgres
system2postgres    ubi                     postgres
PG_IDENT
safe_write_to_file("/etc/postgresql/16/main/pg_ident.conf", pg_ident_entries)

# Reload the postmaster to apply changes
r "pg_ctlcluster 16 main reload || pg_ctlcluster 16 main restart"
