=begin
#Clover API

#API for managing resources on Ubicloud

The version of the OpenAPI document: 0.1.0
Contact: support@ubicloud.com
Generated by: https://openapi-generator.tech
Generator version: 7.12.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Ubicloud::PostgresDatabaseApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PostgresDatabaseApi' do
  before do
    # run before each test
    @api_instance = Ubicloud::PostgresDatabaseApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PostgresDatabaseApi' do
    it 'should create an instance of PostgresDatabaseApi' do
      expect(@api_instance).to be_instance_of(Ubicloud::PostgresDatabaseApi)
    end
  end

  # unit tests for create_postgres_database
  # Create a new Postgres Database in a specific location of a project
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param postgres_database_name Postgres database name
  # @param create_postgres_database_request 
  # @param [Hash] opts the optional parameters
  # @return [GetPostgresDatabaseDetails200Response]
  describe 'create_postgres_database test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_postgres_database
  # Delete a specific Postgres Database
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param postgres_database_name Postgres database name
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_postgres_database test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_postgres_ca_certificates_by_name
  # Download CA certificates for a specific Postgres Database in a location with name
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param postgres_database_name Postgres database name
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_postgres_ca_certificates_by_name test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_postgres_database_details
  # Get details of a specific Postgres database in a location
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param postgres_database_name Postgres database name
  # @param [Hash] opts the optional parameters
  # @return [GetPostgresDatabaseDetails200Response]
  describe 'get_postgres_database_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_location_postgres_databases
  # List Postgres Databases in a specific location of a project
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_after Pagination - Start after
  # @option opts [Integer] :page_size Pagination - Page size
  # @option opts [String] :order_column Pagination - Order column
  # @return [ListLocationPostgresDatabases200Response]
  describe 'list_location_postgres_databases test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_postgres_databases
  # List visible Postgres Databases
  # @param project_id ID of the project
  # @param [Hash] opts the optional parameters
  # @option opts [String] :start_after Pagination - Start after
  # @option opts [Integer] :page_size Pagination - Page size
  # @option opts [String] :order_column Pagination - Order column
  # @return [ListLocationPostgresDatabases200Response]
  describe 'list_postgres_databases test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for reset_superuser_password
  # Reset superuser password of the Postgres database
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param postgres_database_name Postgres database name
  # @param reset_superuser_password_request 
  # @param [Hash] opts the optional parameters
  # @return [GetPostgresDatabaseDetails200Response]
  describe 'reset_superuser_password test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for restart_postgres_database
  # Restart a specific Postgres Database
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param postgres_database_name Postgres database name
  # @param [Hash] opts the optional parameters
  # @return [GetPostgresDatabaseDetails200Response]
  describe 'restart_postgres_database test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for restore_postgres_database
  # Restore a new Postgres database in a specific location of a project
  # @param project_id ID of the project
  # @param location The Ubicloud location/region
  # @param postgres_database_name Postgres database name
  # @param restore_postgres_database_request 
  # @param [Hash] opts the optional parameters
  # @return [GetPostgresDatabaseDetails200Response]
  describe 'restore_postgres_database test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
